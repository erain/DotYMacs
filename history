;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(regexp-history LaTeX-environment-history TeX-command-history minibuffer-history-search-history ido-buffer-history tex-compile-history history shell-command-history command-history file-name-history emacs-wiki-search-history minibuffer-history emacs-wiki-history-list buffer-name-history yes-or-no-p-history extended-command-history ido-file-history search-ring))
(setq ido-buffer-history '(".emacs" "*s" "p" "the" "p" "bib" "the" "tex" "the" "k" "thesis" "eva" "temp" "i" "the" "itap" "the" "fu" "the" "k" "m" "tex" ".em" "la" ".ema" "js" "inde" "in" "twi" "index"))
(setq tex-compile-history '("pdflatex \\\\nonstopmode\\\\input letter.tex" "\\doc-view \"THESIS.pdf\"" "view" "bibtex THESIS" "pdflatex \\\\nonstopmode\\\\input THESIS.tex" "bibtex THESIS" "pdflatex \\\\nonstopmode\\\\input THESIS.tex" "bibtex THESIS" "pdflatex \\\\nonstopmode\\\\input THESIS.tex"))
(setq shell-command-history '("python filter.py " "lua test.lua" "scala movies.scala" "scala factorial.scala " "scala factorial" "scala chores.scala " "ls" "python class_init.py" "python using_dict.py" "python using_list.py" "python mymodule_demo.py" "python using_sys.py" "python total.py" "python func_key.py" "python function1.py" "python expression.py" "python var.py"))
(setq command-history '((find-file "/Volumes/Macintosh HD/Users/erain/.ssh/github_rsa.pub") (find-file "/Volumes/Macintosh HD/Users/erain/.ssh/id_rsa.pub") (kill-buffer "filter.py") (shell-command "python filter.py " nil nil) (shell-command "python filter.py " nil nil) (shell-command "python filter.py " nil nil) (find-file "/Volumes/Macintosh HD/Users/erain/tmp/filter.py") (kill-buffer "*Packages*") (package-list-packages) (kill-buffer "init.el") (kill-buffer "package.el") (kill-buffer "*scratch*") (kill-buffer "*Packages*") (package-list-packages) (eval-buffer) (switch-to-buffer ".emacs") (eval-buffer) (eval-buffer) (switch-to-buffer "*scratch*") (switch-to-buffer "package.el") (eval-buffer) (eval-buffer) (switch-to-buffer ".emacs") (find-file "/Volumes/Macintosh HD/Users/erain/.emacs.d/elpa/package.el") (eval-buffer) (package-list-packages) (eval-buffer) (switch-to-buffer ".emacs") (eval-buffer) (switch-to-buffer "*scratch*") (find-file "/Volumes/Macintosh HD/Users/erain/.emacs.d/init.el") (find-file "/Volumes/Macintosh HD/Users/erain/.emacs") (kill-buffer "README.md") (find-file "/Volumes/Macintosh HD/Users/erain/Dropbox/Code/github/QuadCurveMenu/README.md")))
(setq file-name-history '("/Volumes/Macintosh HD/Users/erain/.ssh/github_rsa.pub" "/Volumes/Macintosh HD/Users/erain/.ssh/id_rsa.pub" "/Volumes/Macintosh HD/Users/erain/tmp/filter.py" "/Volumes/Macintosh HD/Users/erain/.emacs.d/elpa/package.el" "/Volumes/Macintosh HD/Users/erain/.emacs.d/init.el" "/Volumes/Macintosh HD/Users/erain/.emacs" "/Volumes/Macintosh HD/Users/erain/Dropbox/Code/github/QuadCurveMenu/README.md" "/Volumes/Macintosh HD/Users/erain/tmp/chores.scala" "/Volumes/Macintosh HD/Users/erain/.emacs.d/package-init.el" "/Volumes/Macintosh HD/Users/erain/.emacs" "/Volumes/Macintosh HD/Users/erain/.emacs.d/init.el" "/Volumes/Macintosh HD/Users/erain/.emacs" "/Volumes/Macintosh HD/Users/erain/tmp/test.lua" "/Volumes/Macintosh HD/Users/erain/.emacs" "/Volumes/Macintosh HD/Users/erain/tmp/chores.scala" "/Volumes/Macintosh HD/Users/erain/tmp/test.lua" "~/.emacs.d/color-theme/themes/" "/Volumes/Macintosh HD/Users/erain/.emacs" "~/.emacs.d/color-theme/themes/" "/Volumes/Macintosh HD/Users/erain/.emacs.d/color-theme/AUTHORS" "/Volumes/Macintosh HD/Users/erain/.emacs" "/Volumes/Macintosh HD/Users/erain/tmp/test.lua" "/Volumes/Macintosh HD/Users/erain/.emacs" "/Volumes/Macintosh HD/Users/erain/tmp/test.lua" "/Volumes/Macintosh HD/Users/erain/test.cpp" "/Volumes/Macintosh HD/Users/erain/tmp/sizer.scala" "/Volumes/Macintosh HD/Users/erain/tmp/kids.scala" "/Volumes/Macintosh HD/Users/erain/tmp/movies.scala" "/Volumes/Macintosh HD/Users/erain/tmp/factorial.scala" "/Volumes/Macintosh HD/Users/erain/tmp/chores.scala"))
(setq minibuffer-history '("=" "open THESIS.pdf" "TeX-output-view-style" "TeX-view-style" "TeX-output-view-style" "open THESIS.pdf" "oepn THESIS.pdf" "open THESIS.pdf" "openTHESIS.dvi" "open THESIS.dvi" "xdvi -paper a4 THESIS.dvi" "evince THESIS.pdf" "open THESIS.pdf" "evince THESIS.pdf" "paredit" "clojure-mode" "html" "erain9" "net9" "erain" "http://erain.net9.org/blog/xmlrpc.php" "http://erain.net9.org/blog/" "weblogger" "erain9" "weblogger" "erain9" "weblogger" "erain9" "weblogger" "erain9"))
(setq emacs-wiki-history-list '("Chattr"))
(setq buffer-name-history '("filter.py" "*Packages*" "init.el" "package.el" "*scratch*" "*Packages*" ".emacs" "*scratch*" "package.el" ".emacs" "*scratch*" "README.md" ".emacs" "test.lua" "test.cpp" "Introduction.tex" "while.scala" "compass.scala" ".emacs" "README" "THESIS.tex" "plan.tex" "THESIS.tex" "iTap.tex" "THESIS.tex" "iTap.tex" "THESIS.tex" "iTap.tex" "THESIS.tex" "plan.tex"))
(setq yes-or-no-p-history '("yes" "no" "yes" "no" "yes"))
(setq extended-command-history '("package-list-packages" "eval-buffer" "package-list-packages" "eval-buffer" "twittering-start" "twit" "eval-buffer" "dired" "eval-buffer" "dired" "eval-buffer" "color-theme-select" "eval-buffer" "occur" "align-regexp" "org-agenda" "icomplete-mode" "eval-buffer" "flyspell-buffer" "conf-mode" "flyspell-buffer" "eval-buffer" "flyspell-buffer" "package-refresh-contents" "package-list-packages" "eval-buffer" "flyspell-buffer" "eval-buffer" "package-list-packages" "eval-buffer"))
(setq ido-file-history '("github_rsa.pub" "id_rsa.p" ".ssh" "filter.py" "tmp" "pa" "el" "in" ".emacs.d" ".emas" "R" "Qu" "git" "co" "dro" "scala" "tmp" "package-init.el" ".i" ".ini" ".i" ".emacs" "ini" ".emacs.d" ".emacs" "test.lua" ".emacs" "scala" "lua" "test.lu"))
(setq search-ring '("pack" "twitter" "color" "bear" "Query-by-Name" "gwap" "GWAP" "GWA" "H" "Jason" "M. E." "paper" "future work" "pa" "annotation process" "paper"))
